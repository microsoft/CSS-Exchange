# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

. $PSScriptRoot\..\Add-AnalyzedResultInformation.ps1
. $PSScriptRoot\..\..\..\..\Shared\CompareExchangeBuildLevel.ps1
function Invoke-AnalyzerSecurityCve-2021-1730 {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory = $true)]
        [ref]$AnalyzeResults,

        [Parameter(Mandatory = $true)]
        [object]$SecurityObject,

        [Parameter(Mandatory = $true)]
        [object]$DisplayGroupingKey
    )
    Write-Verbose "Calling: $($MyInvocation.MyCommand)"
    #Description: Check for CVE-2021-1730 vulnerability
    #Fix available for: Exchange 2016 CU18+, Exchange 2019 CU7+
    #Fix: Configure Download Domains feature
    #Workaround: N/A

    if (((Test-ExchangeBuildGreaterOrEqualThanBuild -CurrentExchangeBuild $SecurityObject.BuildInformation -Version "Exchange2016" -CU "CU18") -or
            (Test-ExchangeBuildGreaterOrEqualThanBuild -CurrentExchangeBuild $SecurityObject.BuildInformation -Version "Exchange2019" -CU "CU7")) -and
        $SecurityObject.IsEdgeServer -eq $false) {

        $downloadDomainsEnabled = $SecurityObject.OrgInformation.EnableDownloadDomains
        $owaVDirObject = $SecurityObject.ExchangeInformation.VirtualDirectories.GetOwaVirtualDirectory |
            Where-Object { $_.Name -eq "owa (Default Web Site)" }
        $displayWriteType = "Green"

        if (-not ($downloadDomainsEnabled)) {
            $downloadDomainsOrgDisplayValue = "Download Domains are not configured. You should configure them to be protected against CVE-2021-1730.`r`n`t`tConfiguration instructions: https://aka.ms/HC-DownloadDomains"
            $displayWriteType = "Red"
        } else {
            if (-not ([String]::IsNullOrEmpty($OwaVDirObject.ExternalDownloadHostName))) {
                if (($OwaVDirObject.ExternalDownloadHostName -eq $OwaVDirObject.ExternalUrl.Host) -or
                            ($OwaVDirObject.ExternalDownloadHostName -eq $OwaVDirObject.InternalUrl.Host)) {
                    $downloadExternalDisplayValue = "Set to the same as Internal Or External URL as OWA."
                    $displayWriteType = "Red"
                } else {
                    $downloadExternalDisplayValue = "Set Correctly."
                }
            } else {
                $downloadExternalDisplayValue = "Not Configured"
                $displayWriteType = "Red"
            }

            if (-not ([string]::IsNullOrEmpty($owaVDirObject.InternalDownloadHostName))) {
                if (($OwaVDirObject.InternalDownloadHostName -eq $OwaVDirObject.ExternalUrl.Host) -or
                            ($OwaVDirObject.InternalDownloadHostName -eq $OwaVDirObject.InternalUrl.Host)) {
                    $downloadInternalDisplayValue = "Set to the same as Internal Or External URL as OWA."
                    $displayWriteType = "Red"
                } else {
                    $downloadInternalDisplayValue = "Set Correctly."
                }
            } else {
                $displayWriteType = "Red"
                $downloadInternalDisplayValue = "Not Configured"
            }

            $downloadDomainsOrgDisplayValue = "Download Domains are configured.`r`n`t`tExternalDownloadHostName: $downloadExternalDisplayValue`r`n`t`tInternalDownloadHostName: $downloadInternalDisplayValue`r`n`t`tConfiguration instructions: https://aka.ms/HC-DownloadDomains"
        }

        #Only display security vulnerability if present
        if ($displayWriteType -eq "Red") {
            $params = @{
                AnalyzedInformation = $AnalyzeResults
                DisplayGroupingKey  = $DisplayGroupingKey
                Name                = "Security Vulnerability"
                Details             = $downloadDomainsOrgDisplayValue
                DisplayWriteType    = "Red"
                TestingName         = "CVE-2021-1730"
                DisplayTestingValue = ([PSCustomObject]@{
                        DownloadDomainsEnabled   = $downloadDomainsEnabled
                        ExternalDownloadHostName = $downloadExternalDisplayValue
                        InternalDownloadHostName = $downloadInternalDisplayValue
                    })
                AddHtmlDetailRow    = $false
            }
            Add-AnalyzedResultInformation @params
        }
    } else {
        Write-Verbose "Download Domains feature not available because we are on: $($SecurityObject.MajorVersion) $($SecurityObject.CU) or on Edge Transport Server"
    }
}
