# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

. $PSScriptRoot\..\Add-AnalyzedResultInformation.ps1
function Invoke-AnalyzerSecurityCve-2023-36434 {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory = $true)]
        [ref]$AnalyzeResults,

        [Parameter(Mandatory = $true)]
        [object]$SecurityObject,

        [Parameter(Mandatory = $true)]
        [object]$DisplayGroupingKey
    )

    <#
        Description: Check for CVE-2023-36434 vulnerability (also tracked as CVE-2023-21709)
        Affected Exchange versions: 2016, 2019
        Fix: Install October 2023 Windows Security Update
        Workaround: Remove TokenCacheModule from IIS by running the CVE-2023-21709.ps1 script
    #>

    begin {
        $stopWatch = [System.Diagnostics.Stopwatch]::StartNew()
        Write-Verbose "Calling: $($MyInvocation.MyCommand)"
        # Because we don't have the revision number here, we don't want to provide the 4th value otherwise it will not work correctly
        $notWindows2025OrGreater = $SecurityObject.OsInformation.BuildInformation.BuildVersion -lt [System.Version]"10.0.26100"
        $tokenCacheModuleVersionInformation = $SecurityObject.ExchangeInformation.IISSettings.IISTokenCacheModuleInformation
        $tokenCacheFixedVersionNumber = $null
        $tokenCacheVersionGreaterOrEqual = $false
    }
    process {
        if ($SecurityObject.IsEdgeServer -eq $false -and
            $notWindows2025OrGreater) {
            Write-Verbose "Testing CVE: CVE-2023-21709 / CVE-2023-36434"

            if ($SecurityObject.ExchangeInformation.IISSettings.IISModulesInformation.ModuleList.Name -contains "TokenCacheModule") {
                Write-Verbose "TokenCacheModule detected - system could be vulnerable to CVE-2023-21709 / CVE-2023-36434 vulnerability"

                if ($null -ne $tokenCacheModuleVersionInformation) {
                    Write-Verbose "TokenCacheModule build information found - performing build analysis now..."
                    switch ($tokenCacheModuleVersionInformation.FileBuildPart) {
                        9200 { $tokenCacheFixedVersionNumber = "8.0.9200.24514"; break } # Windows Server 2012
                        9600 { $tokenCacheFixedVersionNumber = "8.5.9600.21613"; break } # Windows Server 2012 R2
                        14393 { $tokenCacheFixedVersionNumber = "10.0.14393.6343"; break } # Windows Server 2016
                        17763 { $tokenCacheFixedVersionNumber = "10.0.17763.4968"; break } # Windows Server 2019
                        20348 { $tokenCacheFixedVersionNumber = "10.0.20348.2029"; break } # Windows Server 2022
                        default { Write-Verbose "No fixed TokenCacheModule version available for Windows OS build: $($tokenCacheModuleVersionInformation.FileBuildPart)" }
                    }

                    if ($null -ne $tokenCacheFixedVersionNumber) {
                        Write-Verbose "Build: $($tokenCacheModuleVersionInformation.FileBuildPart) found - testing against version: $tokenCacheFixedVersionNumber"
                        $tokenCacheVersionGreaterOrEqual = ([system.version]$tokenCacheModuleVersionInformation.ProductVersion -ge $tokenCacheFixedVersionNumber)
                        Write-Verbose "Version: $($tokenCacheModuleVersionInformation.ProductVersion) is greater or equal the expected version? $tokenCacheVersionGreaterOrEqual"
                    }
                } else {
                    Write-Verbose "We were unable to query TokenCacheModule build information - as the module is loaded, we're assuming that it's vulnerable"
                }

                if ($tokenCacheVersionGreaterOrEqual -eq $false) {
                    $params = @{
                        AnalyzedInformation = $AnalyzeResults
                        DisplayGroupingKey  = $DisplayGroupingKey
                        Name                = "Security Vulnerability"
                        Details             = ("{0}`r`n`t`tSee: https://portal.msrc.microsoft.com/security-guidance/advisory/{0} for more information." -f "CVE-2023-36434")
                        DisplayWriteType    = "Red"
                        DisplayTestingValue = "CVE-2023-36434"
                        AddHtmlDetailRow    = $false
                    }
                    Add-AnalyzedResultInformation @params
                }
            }
        } elseif ( -not $notWindows2025OrGreater) {
            Write-Verbose "Windows Server 2025 or greater is not affected by this vulnerability"
        } else {
            Write-Verbose "Edge Server Role is not affected by this vulnerability as it has no IIS installed"
        }
        Write-Verbose "Completed: $($MyInvocation.MyCommand) and took $($stopWatch.Elapsed.TotalSeconds) seconds"
    }
}
