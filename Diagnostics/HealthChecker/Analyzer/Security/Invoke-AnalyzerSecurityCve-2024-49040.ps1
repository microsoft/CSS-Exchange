# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

. $PSScriptRoot\..\Add-AnalyzedResultInformation.ps1
function Invoke-AnalyzerSecurityCve-2024-49040 {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory = $true)]
        [ref]$AnalyzeResults,

        [Parameter(Mandatory = $true)]
        [object]$SecurityObject,

        [Parameter(Mandatory = $true)]
        [object]$DisplayGroupingKey
    )
    begin {
        Write-Verbose "Calling: $($MyInvocation.MyCommand)"
        $exchangeInformation = $SecurityObject.ExchangeInformation
        $organizationInformation = $SecurityObject.OrgInformation
        $exchangeBuild = $exchangeInformation.BuildInformation.VersionInformation.BuildVersion
        # cSpell:disable
        # Need to disable cSpell because this is the name of the override
        $filterParameterName = @("AddDisclaimerforRegexMatch", "AddP2FromRegexMatchHeader")
        # cSpell:enable
    }
    process {
        $params = @{
            ExchangeSettingOverride = $exchangeInformation.SettingOverrides
            GetSettingOverride      = $organizationInformation.GetSettingOverride
            FilterServer            = $exchangeInformation.GetExchangeServer.Name
            FilterServerVersion     = $exchangeBuild
            FilterComponentName     = "Transport"
            FilterSectionName       = "NonCompliantSenderSettings"
            FilterParameterName     = $filterParameterName
        }
        [array]$nonCompliantSenderSettings = Get-FilteredSettingOverrideInformation @params

        $overrideDisabled = $nonCompliantSenderSettings.Count -gt 0 -and
            (($nonCompliantSenderSettings | Where-Object { $_.ParameterValue -eq "false" }).Count -eq 2)
        $isSuApplied = (Test-ExchangeBuildGreaterOrEqualThanSecurityPatch -CurrentExchangeBuild $SecurityObject.BuildInformation -SUName "Nov24SUv2")

        if (-not $isSuApplied -or $overrideDisabled) {
            $params = @{
                AnalyzedInformation = $AnalyzeResults
                DisplayGroupingKey  = $DisplayGroupingKey
                Name                = "Security Vulnerability"
                Details             = ("{0} - Override Is Set: $overrideDisabled`r`n`t`tSee: https://portal.msrc.microsoft.com/security-guidance/advisory/{0} for more information." -f "CVE-2024-49040")
                DisplayWriteType    = "Red"
                DisplayTestingValue = "CVE-2024-49040"
            }
            Add-AnalyzedResultInformation @params
        }
    }
}
